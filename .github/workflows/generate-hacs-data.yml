name: Generate HACS Data

on:
  workflow_dispatch:
    inputs:
      forceRepositoryUpdate:
        description: 'Force repository update'
        required: false
        default: 'False'
        type: choice
        options:
          - "False"
          - "True"
      category:
        description: 'Select a category'
        required: false
        type: choice
        options:
          - None
          - appdaemon
          - integration
          - plugin
          - python_script
          - template
          - theme
  schedule:
    - cron: "0 0 1 1 *"

concurrency:
  group: category-data

jobs:
  generate-matrix:
    name: Generate matrix
    runs-on: ubuntu-latest
    if: github.repository == 'hacs/integration'
    outputs:
      categories: ${{ steps.set-matrix.outputs.categories }}
    steps:
      - id: set-matrix
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch"  ]] && [[ "${{ inputs.category }}" != "None"  ]] && [[ "${{ inputs.category }}" != ""  ]]; then
            echo "categories=['${{ inputs.category }}']" >> $GITHUB_OUTPUT
          else
            echo "categories=['appdaemon','integration','plugin','python_script','template','theme']" >> $GITHUB_OUTPUT
          fi
  category-data:
    runs-on: ubuntu-latest
    needs: generate-matrix
    if: github.repository == 'hacs-china/integration'
    name: Generate ${{ matrix.category }} data
    strategy:
      matrix:
        category: ${{ fromJSON( needs.generate-matrix.outputs.categories )}}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3.5.3

      - name: Set up Python
        uses: actions/setup-python@v4.7.0
        id: python
        with:
          python-version: "3.x"
          cache: 'pip'
          cache-dependency-path: |
            requirements_base.txt
            requirements_generate_data.txt

      - name: Install dependencies
        run:  |
          scripts/install/frontend
          scripts/install/pip_packages --requirement requirements_generate_data.txt

      - name: Check API rate limit
        run: |
          curl -H "Authorization: Bearer ${{ secrets.DATA_GENERATOR_TOKEN }}" \
          https://api.github.com/rate_limit

      - name: Generate ${{ matrix.category }} data
        run: python3 -m scripts.data.generate_category_data ${{ matrix.category }}
        env:
          DATA_GENERATOR_TOKEN: ${{ secrets.DATA_GENERATOR_TOKEN }}
          FORCE_REPOSITORY_UPDATE: ${{ inputs.forceRepositoryUpdate }}

      - name: Check if updated
        id: updated
        run: |
          if test -f "outputdata/${{ matrix.category }}/data.json"; then
            echo "updated=true" >> "$GITHUB_OUTPUT"
          else
            echo "updated=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Validate output with JQ
        if: steps.updated.outputs.updated == 'true'
        run: |
          jq -c . outputdata/${{ matrix.category }}/data.json
          jq -c . outputdata/${{ matrix.category }}/repositories.json

      - name: Generate diff
        if: steps.updated.outputs.updated == 'true'
        run: |
          diff -u outputdata/diff/${{ matrix.category }}_before.json outputdata/diff/${{ matrix.category }}_after.json > outputdata/diff/${{ matrix.category }}.diff || true

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        if: steps.updated.outputs.updated == 'true'
        with:
          name: ${{ matrix.category }}
          path: |
            outputdata/${{ matrix.category }}
            outputdata/diff/${{ matrix.category }}.diff
          if-no-files-found: error
          retention-days: 7

      - name: Commit to Github
        env:
          GITHUB_TOKEN: ${{ secrets.API_TOKEN_GITHUB }}
        run: |
          git config --global user.name github-actions
          git config --global user.email github-actions@github.com
          git clone https://x-access-token:$GITHUB_TOKEN@github.com/hacs-china/data.git ../hacs-data
          cp -rf outputdata/${{ matrix.category }} ../hacs-data/
          cd ../hacs-data
          git add -A .
          git commit -m "Generated hacs ${{ matrix.category }} data"
          git push -u https://x-access-token:$GITHUB_TOKEN@github.com/hacs-china/data.git main
